class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) 
    {
        if(matrix.size()==0)
        {
            return 0;
        }
        vector<vector<int>> dp(matrix.size()+1,vector<int>(matrix[0].size()+1));
        int largest = 0;
        for(int i=0;i<=matrix.size();i++)
        {
            for(int j=0;j<=matrix[0].size();j++)
            {
                if(i==0 || j==0)
                {
                    dp[i][j] = 0;
                }
                else if(matrix[i-1][j-1] == '1')
                {
                    dp[i][j] = min(min(dp[i-1][j],dp[i][j-1]),dp[i-1][j-1]) + 1;
                }
                else if(matrix[i-1][j-1] == '0')
                {
                    dp[i][j] = 0;
                }
                //cout<<dp[i][j]<<" ";
                if(dp[i][j] > largest)
                {
                    largest = dp[i][j];
                }
            }
            //cout<<endl;
        }
        return largest*largest;
    }
};
